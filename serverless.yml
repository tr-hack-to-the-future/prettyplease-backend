# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: prettyplease-backend
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name
frameworkVersion: '2'

provider:
  name: aws
  runtime: java8
  profile: serverless
  environment:
    DB_HOST: ${file(./config.dev.json):DB_HOST}
    DB_NAME: ${file(./config.dev.json):DB_NAME}
    DB_USER: ${file(./config.dev.json):DB_USER}
    DB_PASSWORD: ${file(./config.dev.json):DB_PASSWORD}

# you can overwrite defaults here
#  stage: dev
  region: eu-west-2

package:
  artifact: target/prettyplease-dev.jar

functions:
  getsponsor:
    handler: com.prettyplease.SponsorHandler
    events:
      - http:
          path: sponsors/{sponsorId}
          method: get

#  listsponsors:
#    handler: com.prettyplease.ListSponsorHandler
#    events:
#      - http:
#          path: sponsors
#          method: get
#
  createsponsor:
    handler: com.prettyplease.SponsorHandler
    events:
      - http:
          path: sponsors
          method: post

  getcharity:
    handler: com.prettyplease.GetCharityHandler
    events:
      - http:
          path: charities/{charityId}
          method: get

#  createcharity:
#    handler: com.prettyplease.CreateCharityHandler
#    events:
#      - http:
#          path: charities
#          method: post
#
#  getrequest:
#    handler: com.prettyplease.GetRequestHandler
#    events:
#      - http:
#          path: requests/{requestId}
#          method: get
#
#  listrequests:
#    handler: com.prettyplease.ListRequestHandler
#    events:
#      - http:
#          path: requests
#          method: get
#
#  createrequest:
#    handler: com.prettyplease.CreateRequestHandler
#    events:
#      - http:
#          path: requests
#          method: post
#
#  updaterequest:
#    handler: com.prettyplease.UpdateRequestHandler
#    events:
#      - http:
#          path: requests/{requestId}
#          method: put
#
#  getoffer:
#    handler: com.prettyplease.GetOfferHandler
#    events:
#      - http:
#          path: offers/{offerId}
#          method: get

#  listoffers:
#    handler: com.prettyplease.ListOfferHandler
#    events:
#      - http:
#          path: offers
#          method: get
#
#  createoffer:
#    handler: com.prettyplease.CreateOfferHandler
#    events:
#      - http:
#          path: offers
#          method: post
#
#  updateoffer:
#    handler: com.prettyplease.UpdateOfferHandler
#    events:
#      - http:
#          path: offers/{offerId}
#          method: put
