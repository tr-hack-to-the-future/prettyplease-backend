# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: prettyplease-backend
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name
frameworkVersion: '2'

provider:
  name: aws
  runtime: java8
  profile: serverless
  environment:
    DB_HOST: ${file(./config.dev.json):DB_HOST}
    DB_NAME: ${file(./config.dev.json):DB_NAME}
    DB_USER: ${file(./config.dev.json):DB_USER}
    DB_PASSWORD: ${file(./config.dev.json):DB_PASSWORD}

  # you can overwrite defaults here
  #  stage: dev
  region: eu-west-2

package:
  artifact: target/prettyplease-dev.jar

functions:
  # GET
  # sponsor table
  getsponsor:
    handler: com.prettyplease.SponsorHandler
    events:
      - http:
          path: sponsors/{sponsorId}
          method: get
          cors: true

  # charity table
  getcharity:
    handler: com.prettyplease.CharityHandler
    events:
      - http:
          path: charities/{charityId}
          method: get
          cors: true

  # detailed responses are multiple joined tables
  # always going to get the request with the charity details

  # get detailed request by requestId
  getsponsorrequest:
    handler: com.prettyplease.CharityRequestHandler
    events:
      - http:
          path: requests/{requestId}
          method: get
          cors: true

  # list of detailed requests
  listdetailedrequests:
    handler: com.prettyplease.CharityRequestHandler
    events:
      - http:
          path: requests
          method: get
          cors: true

# all requests, excluding those sponsored by the selected sponsorId
  listopenrequests:
    handler: com.prettyplease.SponsorRequestHandler
    events:
      - http:
          path: sponsorrequests/{sponsorId}
          method: get
          cors: true

# requests by charityId
  listcharityrequests:
    handler: com.prettyplease.CharityGetRequestHandler
    events:
      - http:
          path: charityrequests/{charityId}
          method: get
          cors: true


  # list of detailed offers by charityId
  listcharityoffers:
    handler: com.prettyplease.CharityOfferHandler
    events:
      - http:
          path: charityoffers/{charityId}
          method: get
          cors: true

  # list of detailed offers by sponsorid
  listsponsoroffers:
    handler: com.prettyplease.SponsorOfferHandler
    events:
      - http:
          path: sponsoroffers/{sponsorId}
          method: get
          cors: true

  # POST
  createsponsor:
    handler: com.prettyplease.SponsorHandler
    events:
      - http:
          path: sponsors
          method: post
          cors: true

  createcharity:
    handler: com.prettyplease.CharityHandler
    events:
      - http:
          path: charities
          method: post
          cors: true

  createrequest:
    handler: com.prettyplease.RequestHandler
    events:
      - http:
          path: requests
          method: post
          cors: true

  createoffer:
    handler: com.prettyplease.OfferHandler
    events:
      - http:
          path: offers
          method: post
          cors: true

  # PUT
  updaterequest:
    handler: com.prettyplease.RequestHandler
    events:
      - http:
          path: requests/{requestId}
          method: put
          cors: true

  updateoffer:
    handler: com.prettyplease.OfferHandler
    events:
      - http:
          path: offers/{offerId}
          method: put
          cors: true

